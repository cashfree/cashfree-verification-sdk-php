<?php
/**
 * PanAdvanceResponseSchema
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Cashfree
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Cashfree Verification API's.
 *
 * Cashfree's Verification APIs provide different types of verification to our merchants.
 *
 * The version of the OpenAPI document: 2023-12-18
 * Contact: developers@cashfree.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Cashfree\Model;

use \ArrayAccess;
use \Cashfree\ObjectSerializer;

/**
 * PanAdvanceResponseSchema Class Doc Comment
 *
 * @category Class
 * @description Success response for PAN Advance
 * @package  Cashfree
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class PanAdvanceResponseSchema implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'PanAdvanceResponseSchema';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'reference_id' => 'int',
        'verification_id' => 'string',
        'status' => 'string',
        'message' => 'string',
        'pan' => 'string',
        'name_provided' => 'string',
        'registered_name' => 'string',
        'name_pan_card' => 'string',
        'type' => 'string',
        'gender' => 'string',
        'date_of_birth' => 'string',
        'masked_aadhaar_number' => 'string',
        'email' => 'string',
        'mobile_number' => 'string',
        'aadhaar_linked' => 'bool',
        'address' => '\Cashfree\Model\PanAdvanceResponseSchemaAddress'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'reference_id' => null,
        'verification_id' => null,
        'status' => null,
        'message' => null,
        'pan' => null,
        'name_provided' => null,
        'registered_name' => null,
        'name_pan_card' => null,
        'type' => null,
        'gender' => null,
        'date_of_birth' => null,
        'masked_aadhaar_number' => null,
        'email' => null,
        'mobile_number' => null,
        'aadhaar_linked' => null,
        'address' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static $openAPINullables = [
        'reference_id' => false,
		'verification_id' => false,
		'status' => false,
		'message' => false,
		'pan' => false,
		'name_provided' => false,
		'registered_name' => false,
		'name_pan_card' => false,
		'type' => false,
		'gender' => false,
		'date_of_birth' => false,
		'masked_aadhaar_number' => false,
		'email' => false,
		'mobile_number' => false,
		'aadhaar_linked' => false,
		'address' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'reference_id' => 'reference_id',
        'verification_id' => 'verification_id',
        'status' => 'status',
        'message' => 'message',
        'pan' => 'pan',
        'name_provided' => 'name_provided',
        'registered_name' => 'registered_name',
        'name_pan_card' => 'name_pan_card',
        'type' => 'type',
        'gender' => 'gender',
        'date_of_birth' => 'date_of_birth',
        'masked_aadhaar_number' => 'masked_aadhaar_number',
        'email' => 'email',
        'mobile_number' => 'mobile_number',
        'aadhaar_linked' => 'aadhaar_linked',
        'address' => 'address'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'reference_id' => 'setReferenceId',
        'verification_id' => 'setVerificationId',
        'status' => 'setStatus',
        'message' => 'setMessage',
        'pan' => 'setPan',
        'name_provided' => 'setNameProvided',
        'registered_name' => 'setRegisteredName',
        'name_pan_card' => 'setNamePanCard',
        'type' => 'setType',
        'gender' => 'setGender',
        'date_of_birth' => 'setDateOfBirth',
        'masked_aadhaar_number' => 'setMaskedAadhaarNumber',
        'email' => 'setEmail',
        'mobile_number' => 'setMobileNumber',
        'aadhaar_linked' => 'setAadhaarLinked',
        'address' => 'setAddress'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'reference_id' => 'getReferenceId',
        'verification_id' => 'getVerificationId',
        'status' => 'getStatus',
        'message' => 'getMessage',
        'pan' => 'getPan',
        'name_provided' => 'getNameProvided',
        'registered_name' => 'getRegisteredName',
        'name_pan_card' => 'getNamePanCard',
        'type' => 'getType',
        'gender' => 'getGender',
        'date_of_birth' => 'getDateOfBirth',
        'masked_aadhaar_number' => 'getMaskedAadhaarNumber',
        'email' => 'getEmail',
        'mobile_number' => 'getMobileNumber',
        'aadhaar_linked' => 'getAadhaarLinked',
        'address' => 'getAddress'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('reference_id', $data ?? [], null);
        $this->setIfExists('verification_id', $data ?? [], null);
        $this->setIfExists('status', $data ?? [], null);
        $this->setIfExists('message', $data ?? [], null);
        $this->setIfExists('pan', $data ?? [], null);
        $this->setIfExists('name_provided', $data ?? [], null);
        $this->setIfExists('registered_name', $data ?? [], null);
        $this->setIfExists('name_pan_card', $data ?? [], null);
        $this->setIfExists('type', $data ?? [], null);
        $this->setIfExists('gender', $data ?? [], null);
        $this->setIfExists('date_of_birth', $data ?? [], null);
        $this->setIfExists('masked_aadhaar_number', $data ?? [], null);
        $this->setIfExists('email', $data ?? [], null);
        $this->setIfExists('mobile_number', $data ?? [], null);
        $this->setIfExists('aadhaar_linked', $data ?? [], null);
        $this->setIfExists('address', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets reference_id
     *
     * @return int|null
     */
    public function getReferenceId()
    {
        return $this->container['reference_id'];
    }

    /**
     * Sets reference_id
     *
     * @param int|null $reference_id It displays the unique ID created by Cashfree Payments for reference purposes.
     *
     * @return self
     */
    public function setReferenceId($reference_id)
    {
        if (is_null($reference_id)) {
            throw new \InvalidArgumentException('non-nullable reference_id cannot be null');
        }
        $this->container['reference_id'] = $reference_id;

        return $this;
    }

    /**
     * Gets verification_id
     *
     * @return string|null
     */
    public function getVerificationId()
    {
        return $this->container['verification_id'];
    }

    /**
     * Sets verification_id
     *
     * @param string|null $verification_id It displays the unique ID you created to identify the verification request.
     *
     * @return self
     */
    public function setVerificationId($verification_id)
    {
        if (is_null($verification_id)) {
            throw new \InvalidArgumentException('non-nullable verification_id cannot be null');
        }
        $this->container['verification_id'] = $verification_id;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string|null
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string|null $status It displays the status of the PAN information.
     *
     * @return self
     */
    public function setStatus($status)
    {
        if (is_null($status)) {
            throw new \InvalidArgumentException('non-nullable status cannot be null');
        }
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets message
     *
     * @return string|null
     */
    public function getMessage()
    {
        return $this->container['message'];
    }

    /**
     * Sets message
     *
     * @param string|null $message It displays details about the success or failure of the API request.
     *
     * @return self
     */
    public function setMessage($message)
    {
        if (is_null($message)) {
            throw new \InvalidArgumentException('non-nullable message cannot be null');
        }
        $this->container['message'] = $message;

        return $this;
    }

    /**
     * Gets pan
     *
     * @return string|null
     */
    public function getPan()
    {
        return $this->container['pan'];
    }

    /**
     * Sets pan
     *
     * @param string|null $pan It displays the PAN information entered in the API request.
     *
     * @return self
     */
    public function setPan($pan)
    {
        if (is_null($pan)) {
            throw new \InvalidArgumentException('non-nullable pan cannot be null');
        }
        $this->container['pan'] = $pan;

        return $this;
    }

    /**
     * Gets name_provided
     *
     * @return string|null
     */
    public function getNameProvided()
    {
        return $this->container['name_provided'];
    }

    /**
     * Sets name_provided
     *
     * @param string|null $name_provided It displays the name entered in the API request.
     *
     * @return self
     */
    public function setNameProvided($name_provided)
    {
        if (is_null($name_provided)) {
            throw new \InvalidArgumentException('non-nullable name_provided cannot be null');
        }
        $this->container['name_provided'] = $name_provided;

        return $this;
    }

    /**
     * Gets registered_name
     *
     * @return string|null
     */
    public function getRegisteredName()
    {
        return $this->container['registered_name'];
    }

    /**
     * Sets registered_name
     *
     * @param string|null $registered_name It displays the registererd name as present in the PAN information.
     *
     * @return self
     */
    public function setRegisteredName($registered_name)
    {
        if (is_null($registered_name)) {
            throw new \InvalidArgumentException('non-nullable registered_name cannot be null');
        }
        $this->container['registered_name'] = $registered_name;

        return $this;
    }

    /**
     * Gets name_pan_card
     *
     * @return string|null
     */
    public function getNamePanCard()
    {
        return $this->container['name_pan_card'];
    }

    /**
     * Sets name_pan_card
     *
     * @param string|null $name_pan_card It displays the name as present in the PAN information.
     *
     * @return self
     */
    public function setNamePanCard($name_pan_card)
    {
        if (is_null($name_pan_card)) {
            throw new \InvalidArgumentException('non-nullable name_pan_card cannot be null');
        }
        $this->container['name_pan_card'] = $name_pan_card;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string|null
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string|null $type It displays the type of the PAN issued.
     *
     * @return self
     */
    public function setType($type)
    {
        if (is_null($type)) {
            throw new \InvalidArgumentException('non-nullable type cannot be null');
        }
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets gender
     *
     * @return string|null
     */
    public function getGender()
    {
        return $this->container['gender'];
    }

    /**
     * Sets gender
     *
     * @param string|null $gender It displays the gender of the individual as present in the PAN information.
     *
     * @return self
     */
    public function setGender($gender)
    {
        if (is_null($gender)) {
            throw new \InvalidArgumentException('non-nullable gender cannot be null');
        }
        $this->container['gender'] = $gender;

        return $this;
    }

    /**
     * Gets date_of_birth
     *
     * @return string|null
     */
    public function getDateOfBirth()
    {
        return $this->container['date_of_birth'];
    }

    /**
     * Sets date_of_birth
     *
     * @param string|null $date_of_birth It displays the date of birth of the individual.
     *
     * @return self
     */
    public function setDateOfBirth($date_of_birth)
    {
        if (is_null($date_of_birth)) {
            throw new \InvalidArgumentException('non-nullable date_of_birth cannot be null');
        }
        $this->container['date_of_birth'] = $date_of_birth;

        return $this;
    }

    /**
     * Gets masked_aadhaar_number
     *
     * @return string|null
     */
    public function getMaskedAadhaarNumber()
    {
        return $this->container['masked_aadhaar_number'];
    }

    /**
     * Sets masked_aadhaar_number
     *
     * @param string|null $masked_aadhaar_number It displays the masked aadhaar number of the individual.
     *
     * @return self
     */
    public function setMaskedAadhaarNumber($masked_aadhaar_number)
    {
        if (is_null($masked_aadhaar_number)) {
            throw new \InvalidArgumentException('non-nullable masked_aadhaar_number cannot be null');
        }
        $this->container['masked_aadhaar_number'] = $masked_aadhaar_number;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string|null
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string|null $email It displays the email ID of the individual.
     *
     * @return self
     */
    public function setEmail($email)
    {
        if (is_null($email)) {
            throw new \InvalidArgumentException('non-nullable email cannot be null');
        }
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets mobile_number
     *
     * @return string|null
     */
    public function getMobileNumber()
    {
        return $this->container['mobile_number'];
    }

    /**
     * Sets mobile_number
     *
     * @param string|null $mobile_number It displays the mobile number of the individual.
     *
     * @return self
     */
    public function setMobileNumber($mobile_number)
    {
        if (is_null($mobile_number)) {
            throw new \InvalidArgumentException('non-nullable mobile_number cannot be null');
        }
        $this->container['mobile_number'] = $mobile_number;

        return $this;
    }

    /**
     * Gets aadhaar_linked
     *
     * @return bool|null
     */
    public function getAadhaarLinked()
    {
        return $this->container['aadhaar_linked'];
    }

    /**
     * Sets aadhaar_linked
     *
     * @param bool|null $aadhaar_linked It displays the aadhaar and PAN link status.
     *
     * @return self
     */
    public function setAadhaarLinked($aadhaar_linked)
    {
        if (is_null($aadhaar_linked)) {
            throw new \InvalidArgumentException('non-nullable aadhaar_linked cannot be null');
        }
        $this->container['aadhaar_linked'] = $aadhaar_linked;

        return $this;
    }

    /**
     * Gets address
     *
     * @return \Cashfree\Model\PanAdvanceResponseSchemaAddress|null
     */
    public function getAddress()
    {
        return $this->container['address'];
    }

    /**
     * Sets address
     *
     * @param \Cashfree\Model\PanAdvanceResponseSchemaAddress|null $address address
     *
     * @return self
     */
    public function setAddress($address)
    {
        if (is_null($address)) {
            throw new \InvalidArgumentException('non-nullable address cannot be null');
        }
        $this->container['address'] = $address;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


